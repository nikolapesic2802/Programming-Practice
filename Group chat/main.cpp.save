#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include "group.h"

#define ll long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set; ///find_by_order(),order_of_key()
vector<int> x,y;
int n;
vector<int> visited;
int dist(int i,int j)
{
    return abs(x[i]-x[j])+abs(y[i]-y[j]);
}
int getMinimumDelay(int N, vector<int> X, vector<int> Y) {
    x=X;
    y=Y;
    n=N;
    visited.resize(n);
    int l=0,r=2*1e9;
    while(l<r)
    {
        int mid=(l+r)/2;
        for(int i=1;i<n;i++)
        {
            if(dist(0,i))
        }
    }
    return 0;
}

int main() {
  int N;
  scanf("%d", &N);

  std::vector<int> X(N), Y(N);
  for (int i = 0; i < N; ++i) {
    scanf("%d %d", &X[i], &Y[i]);
  }

  printf("%d\n", getMinimumDelay(N, X, Y));
  return 0;
}
