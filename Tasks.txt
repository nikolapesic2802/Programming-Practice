Day 1 - Task B "Crno Bela Zvezda"
Lets define a star as a tree with 4 nodes(one root node and 3 children nodes (leaves) attached to it).
If the root node is colored black, all the children nodes need to be colored white, and if the root node is colored white, all the children nodes need to be colored black.
You are given N points, each of which is colored white or black. If you were to connect point 1 with point 2, points 2 with points 3,..., points N with point 1, the connections would form a regular N-tagon.
You need to count the number of ways to draw N/4 stars (connecting some pairs of points) such that no two lines intersect taken modulo 1e9+7.
Example:
N=8,A=[1,1,0,1,0,1,1,1] (Colors of the nodes, 0-white, 1-black)
There are two ways to draw the stars:
First star:[1,2,3,4], second star:[5,6,7,8] (Indexes of the points)
First star:[8,1,2,3], second star:[4,5,6,7]
Constraints:
1<=N<=500, N is divisible by 4
0<=Ai<=1 (The color of the i-th point)

Day 1 - Task C "Kamera".
You are given a R*C matrix, each field contains one bidirectional weighted edge connecting u and v with weight w, 1 <= u,v <= N.
You are given Q queries each describing a submatrix from x1 y1 to x2 y2.
For each query, if you were to build a graph containing the edges from the submatrix, you need to output the weight of the MST of that graph or output -1 if the graph is not connected.
If we mark the value of (x2-x1+1)/(y2-y1+1) as a, the following will be true for every query: 2/3 <= a <= 3/2.
Example:
N=4,R=3,C=4,Q=3.
The matrix (each triple is (u,v,w)):
(1,2,1) (1,2,2) (1,2,3) (1,2,100)
(2,3,2) (2,3,3) (2,3,1) (2,3,101)
(3,4,3) (3,4,1) (3,4,2) (3,4,102)
And the queries are (1,1,3,4),(1,2,3,3),(3,4,3,4)
The first query covers the whole matrix, the solution is 3.
The second query covers the middle two columns, the solution is 4.
The third query covers only the bottom right element, the solution is -1.
Constraints:
2<=N<=40
1<=R,C<=250
1<=Q<200000
0<=W<=65535(the weight of the edges)

Day 2 - Task B "Planine"
*This is an interactive problem*
There is an N*N hidden matrix, each field has a value in it(the height of the field).
You need to find a field that is strictly heigher than all the other fields in its row, and strictly lower that all the other fields in its column or output that there is no such field.
You can ask at most K queries of type: what is the height of field i,j.
Example:
N=3,K=9
Hidden matrix:
3 9 9
2 2 7
7 5 8
Your program needs to output the field (2,3) as the answer and use at most 9 queries.
Subtasks:
[4 points] N=100,K=10.000
[9 points] N=1.000,K=1.000.000
[12 points] N=1.000,K=5.000, the height of all fields is 1,2 or 3
[18 points] N=1.000,K=501.500
[19 points] N=2.048,K=360.000
[14 points] N=3.000,K=12.000
[24 points] N=100.000,K=400.000

Day 2 - Task C "Film"
N people all watched the same movie, and after the movie ended, they all told you one scene from the movie represented as string of lower case letters of the alphabet.
They all also told you that the scene they described appeared exactly once during the movie.
You are given the task to consturct the shortest possible movie containing the first K letters of the alphabet matching the given description, or output -1 if its impossible.
Example 1:
N=6,K=26.
Given scenes: "ave","venge","ger","rs","r","av". The solution is "avengers".
Example 2:
N=2,K=2.
Given scenes: "ababa","aba". The solution is -1.
Constraints:
1<=N<=14
1<K<=26
Li>=1 (Length of string i)
Sum over all Li <=150


Notes:
-I used the word "output" but the tasks all required you to implement a function that solves the problem, so a better word would probably be "return" and in some cases change the value of the given arrays.
-There are test competitions where you can submit (they are open until the 25th). Link: https://takprog.petlja.org/srednjaskola/post/140
-I think you should be able to find you way around the site using google translate. You will need to create an account on petlja.org but that shouldn't be an issue.