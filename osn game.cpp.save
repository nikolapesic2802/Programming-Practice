/*
    -For R=0, we can ask 1 2 3 ... n-1 n n n-1 ... 2 1. After that, until we get 2 hits, just ask 1 (or any other number). When we get 2 hits, we can uniquely determine what the bomb is. So just print that number until we get n hits.
    -For R=1, we change our strategy a little bit: ask 1 2 3 ... n/2-1 n/2 n/2 n/2-1 ... 2 1.
        if(we get a hit){
            ask 1 until we have 2 hits, determine what the number is, and ask it until we get n hits;
        }else{
            ask n/2+1 n/2+2 ... n-1 n.

            if(we get 2 hits){
                //This means that the answer is somewhere in [1,n/2]
                This means that we can uniquely determine what the number is, and ask it until we get n hits;
            }else{
                ask n n-1 ... n/2+2 n/2+1 but make sure to stop if we get 2 hits.
                if(we got 2 hits){
                    This means that we can uniquely determine what the number is, and ask it until we get n hits;
                }else{
                    ask 1 until we have 2 hits, determine what the number is, and ask it until we get n hits;
                }
            }
        }
*/
#include <bits/stdc++.h>

#define pb push_back

using namespace std;


int n,tr,t,r;
string s;
vector<int> boom,guesses;
bool ask(int i){
    printf("%i\n",i);
    cin >> s;
    return s[0]=='B';
}
void solve(){
    while(boom.size()<2){
        if(ask(1))
            boom.pb(tr);
        guesses[tr++]=0;
    }
    int ans;
    for(int k=0;k<n;k++)
        if(boom[0]-k>=0&&boom[1]-k>=0&&guesses[boom[0]-k]==guesses[boom[1]-k])
            ans=guesses[boom[0]-k];
    while(boom.size()<n)
        if(ask(ans))
            boom.pb(0);
    exit(0);
}
int main()
{
    cin >> s >> n >> t >> r;
    guesses.resize(3*n);
    for(int i=0;i<n/2;i++){
        if(ask(i+1))
            boom.pb(tr);
        guesses[tr++]=i+1;
    }
    for(int i=0;i<n/2;i++){
        if(ask(n/2-i))
            boom.pb(tr);
        guesses[tr++]=n/2-i;
    }
    if(!boom.empty())
        solve();
    for(int i=n/2;i<n;i++){
        if(ask(i+1))
            boom.pb(tr);
        guesses[tr++]=i+1;
    }
    if(boom.size()==2)
        solve();
    for(int i=n;i>n/2&&boom.size()<2;i--){
        if(ask(i))
            boom.pb(tr);
        guesses[tr++]=i;
    }
    solve();
}
